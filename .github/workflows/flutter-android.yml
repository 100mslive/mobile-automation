# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Appium CI

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Select OS-platform'
        required: true
        default: 'android_flutter'
#   schedule:
    # android_flutter
#     - cron: '0 9 * * *'
    # android_native
#     - cron: '10 9 * * *'
    # android_rn
#     - cron: '20 9 * * *'
    
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
#   repository_dispatch:
#     types: [automation]

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix: 
        api-level: [29]
        target: [default]

    steps:
#       # Figure out the platform where test needs to be run
      - name: Input from workflow dispatch
        if: github.event_name == 'workflow_dispatch'
        run: echo "PLATFORM=${{ github.event.inputs.platform }}" >> $GITHUB_ENV

#       - name: Test on ANDROID-FLUTTER when push
#         if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
#         run: echo "PLATFORM=android_flutter" >> $GITHUB_ENV

      - name: (From Cron) ANDROID-FLUTTER
        if: github.event.schedule == '0 9 * * *'
        run: echo "PLATFORM=android_flutter" >> $GITHUB_ENV
        
      - name: (From Cron) ANDROID-NATIVE
        if: github.event.schedule == '10 9 * * *'
        run: echo "PLATFORM=android_native" >> $GITHUB_ENV

      - name: (From Cron) ANDROID-RN
        if: github.event.schedule == '20 9 * * *'
        run: echo "PLATFORM=android_rn" >> $GITHUB_ENV

      - name: print selected platform
        run: echo "selected platform for test = ${{ env.PLATFORM }}"

    # Run test in the above selected region
      - uses: actions/checkout@v3
      - name: Set up JDK 16
        uses: actions/setup-java@v3.2.0
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.1.1
        with:
          node-version: '11'

      - name: Install and Run Appium Server
        run: |
            npm install -g appium@v1.22.2
            appium -v
            appium &>/dev/null &
            ls

      - name: Android Emulator Runner
        uses: ReactiveCircus/android-emulator-runner@v2.23.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: mvn clean test -Dsurefire.suiteXmlFiles=${{ env.PLATFORM }}.xml
#         force-avd-creation: false
#         emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -no-boot-anim none
#         script: mvn test
#         script: mvn -B package --file pom.xml


#     - name: Deploy report to Github Pages
#       if: always()
#       uses: peaceiris/actions-gh-pages@v2
#       env:
#           PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           PUBLISH_BRANCH: gh-pages
#           PUBLISH_DIR: allure-history

#     - name: Send custom test result
#       if: always()
#       id: slack
#       uses: slackapi/slack-github-action@v1.18.0
#       with:
#           payload: |
#             {
#               "text": "Web-Automation build result PROD-EU: ${{ job.status }}\n https://100mslive.github.io/web-automation/${{github.run_number}}/",
#               "blocks": [
#                 {
#                   "type": "section",
#                   "text": {
#                     "type": "mrkdwn",
#                     "text": "Web-Automation build result PROD-EU: ${{ job.status }}\n https://100mslive.github.io/web-automation/${{github.run_number}}/"
#                   }
#                 }
#               ]
#             }
#       env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
