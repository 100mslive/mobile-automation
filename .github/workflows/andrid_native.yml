name: Appium CI

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Select OS-platform'
        required: true
        default: 'android_flutter'
#   schedule:
    # android_native
#     - cron: '10 9 * * *'
    
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: [automation]

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix: 
        api-level: [29]
        target: [default]

    steps:
      - name: (From Cron) ANDROID-NATIVE
        if: github.event.schedule == '10 9 * * *'
        run: echo "PLATFORM=android_native" >> $GITHUB_ENV
        
      - name: print selected platform
        run: echo "selected platform for test = ${{ env.PLATFORM }}"

      - uses: actions/checkout@master
      - name: Download artifact from build
        uses: bettermarks/action-artifact-download@0.1.0
        with:
          repo: 100mslive/android-build-dogfooding
          token: ${{ secrets.ANDRID_NATIVE_TOKEN }}
          artifact_name: 100ms-app-debug.apk
#           rename: new-artifact-name    
          wait_seconds: 60

      - name: Wait for artifact to succeed
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-build
        with:
          token: "${{ secrets.ANDRID_NATIVE_TOKEN }}"
          checkName: artifact

      - uses: actions/checkout@master
      - name: Self test
        id: selftest

        # Put your action repo here
        uses: ./
        with:
          artifact_name: 100ms-app-debug.apk
          token: "${{ secrets.ANDRID_NATIVE_TOKEN }}"
          rename: foobar

      - name: Check outputs
        run: |
          test "${{ steps.selftest.outputs.success }}" == "Artifact downloaded: 100ms-app-debug.apk"
          test -f foobar
    
